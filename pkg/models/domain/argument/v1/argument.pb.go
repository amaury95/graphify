// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: argument/v1/argument.proto

package argumentv1

import (
	utils "github.com/amaury95/protoc-gen-graphify/utils"
	graphql "github.com/graphql-go/graphql"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count  *int64 `protobuf:"varint,1,opt,name=count,proto3,oneof" json:"count,omitempty"`
	Offset *int64 `protobuf:"varint,2,opt,name=offset,proto3,oneof" json:"offset,omitempty"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_argument_v1_argument_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_argument_v1_argument_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_argument_v1_argument_proto_rawDescGZIP(), []int{0}
}

func (x *Pagination) GetCount() int64 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *Pagination) GetOffset() int64 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

type Key struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=_key,proto3" json:"_key,omitempty"`
}

func (x *Key) Reset() {
	*x = Key{}
	if protoimpl.UnsafeEnabled {
		mi := &file_argument_v1_argument_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Key) ProtoMessage() {}

func (x *Key) ProtoReflect() protoreflect.Message {
	mi := &file_argument_v1_argument_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Key.ProtoReflect.Descriptor instead.
func (*Key) Descriptor() ([]byte, []int) {
	return file_argument_v1_argument_proto_rawDescGZIP(), []int{1}
}

func (x *Key) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type Keys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []string `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *Keys) Reset() {
	*x = Keys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_argument_v1_argument_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Keys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Keys) ProtoMessage() {}

func (x *Keys) ProtoReflect() protoreflect.Message {
	mi := &file_argument_v1_argument_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Keys.ProtoReflect.Descriptor instead.
func (*Keys) Descriptor() ([]byte, []int) {
	return file_argument_v1_argument_proto_rawDescGZIP(), []int{2}
}

func (x *Keys) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

var File_argument_v1_argument_proto protoreflect.FileDescriptor

var file_argument_v1_argument_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x72,
	0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x61, 0x72,
	0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x22, 0x59, 0x0a, 0x0a, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x01, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x88, 0x01, 0x01, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x22, 0x18, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x11, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x5f, 0x6b, 0x65, 0x79, 0x22, 0x1a,
	0x0a, 0x04, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x42, 0xb4, 0x01, 0x0a, 0x0f, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x42, 0x0d,
	0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6d, 0x61, 0x75,
	0x72, 0x79, 0x39, 0x35, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x66, 0x79, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f,
	0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x3b, 0x61, 0x72, 0x67, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x41, 0x58, 0x58, 0xaa, 0x02, 0x0b, 0x41,
	0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0b, 0x41, 0x72, 0x67,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x17, 0x41, 0x72, 0x67, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x0c, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x3a, 0x3a, 0x56,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_argument_v1_argument_proto_rawDescOnce sync.Once
	file_argument_v1_argument_proto_rawDescData = file_argument_v1_argument_proto_rawDesc
)

func file_argument_v1_argument_proto_rawDescGZIP() []byte {
	file_argument_v1_argument_proto_rawDescOnce.Do(func() {
		file_argument_v1_argument_proto_rawDescData = protoimpl.X.CompressGZIP(file_argument_v1_argument_proto_rawDescData)
	})
	return file_argument_v1_argument_proto_rawDescData
}

var file_argument_v1_argument_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_argument_v1_argument_proto_goTypes = []interface{}{
	(*Pagination)(nil), // 0: argument.v1.Pagination
	(*Key)(nil),        // 1: argument.v1.Key
	(*Keys)(nil),       // 2: argument.v1.Keys
}
var file_argument_v1_argument_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_argument_v1_argument_proto_init() }
func file_argument_v1_argument_proto_init() {
	if File_argument_v1_argument_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_argument_v1_argument_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_argument_v1_argument_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Key); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_argument_v1_argument_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Keys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_argument_v1_argument_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_argument_v1_argument_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_argument_v1_argument_proto_goTypes,
		DependencyIndexes: file_argument_v1_argument_proto_depIdxs,
		MessageInfos:      file_argument_v1_argument_proto_msgTypes,
	}.Build()
	File_argument_v1_argument_proto = out.File
	file_argument_v1_argument_proto_rawDesc = nil
	file_argument_v1_argument_proto_goTypes = nil
	file_argument_v1_argument_proto_depIdxs = nil
}

/*
	Graphql object
*/

/* Argument ... */
func (*Pagination) Argument() graphql.FieldConfigArgument {
	return graphql.FieldConfigArgument{
		"count": &graphql.ArgumentConfig{
			Type: graphql.Int,
		},
		"offset": &graphql.ArgumentConfig{
			Type: graphql.Int,
		},
	}
}

/* Output ... */
func (*Pagination) Output() graphql.Output {
	return Pagination_Object
}

/* Object ... */
func (*Pagination) Object() *graphql.Object {
	return Pagination_Object
}

var Pagination_Object = graphql.NewObject(graphql.ObjectConfig{
	Name: "Pagination",
	Fields: graphql.Fields{
		"count": &graphql.Field{
			Type: graphql.Int,
		},
		"offset": &graphql.Field{
			Type: graphql.Int,
		},
	},
	Description: "",
})

var option_Pagination_Count = graphql.NewObject(graphql.ObjectConfig{
	Name: "Pagination_Count",
	Fields: graphql.Fields{
		"Count": &graphql.Field{
			Type: graphql.Int,
		},
	},
})

var option_Pagination_Offset = graphql.NewObject(graphql.ObjectConfig{
	Name: "Pagination_Offset",
	Fields: graphql.Fields{
		"Offset": &graphql.Field{
			Type: graphql.Int,
		},
	},
})

var Pagination_Input = graphql.NewInputObject(graphql.InputObjectConfig{
	Name: "Pagination_Input",
	Fields: graphql.InputObjectConfigFieldMap{
		"count": &graphql.InputObjectFieldConfig{
			Type: graphql.Int,
		},
		"offset": &graphql.InputObjectFieldConfig{
			Type: graphql.Int,
		},
	},
})

/* Argument ... */
func (*Key) Argument() graphql.FieldConfigArgument {
	return graphql.FieldConfigArgument{
		"_key": &graphql.ArgumentConfig{
			Type: graphql.ID,
		},
	}
}

/* Output ... */
func (*Key) Output() graphql.Output {
	return Key_Object
}

/* Object ... */
func (*Key) Object() *graphql.Object {
	return Key_Object
}

var Key_Object = graphql.NewObject(graphql.ObjectConfig{
	Name: "Key",
	Fields: graphql.Fields{
		"_key": &graphql.Field{
			Type: graphql.ID,
		},
	},
	Description: "",
})

var Key_Input = graphql.NewInputObject(graphql.InputObjectConfig{
	Name: "Key_Input",
	Fields: graphql.InputObjectConfigFieldMap{
		"_key": &graphql.InputObjectFieldConfig{
			Type: graphql.ID,
		},
	},
})

/* Argument ... */
func (*Keys) Argument() graphql.FieldConfigArgument {
	return graphql.FieldConfigArgument{
		"keys": &graphql.ArgumentConfig{
			Type: graphql.NewList(graphql.String),
		},
	}
}

/* Output ... */
func (*Keys) Output() graphql.Output {
	return Keys_Object
}

/* Object ... */
func (*Keys) Object() *graphql.Object {
	return Keys_Object
}

var Keys_Object = graphql.NewObject(graphql.ObjectConfig{
	Name: "Keys",
	Fields: graphql.Fields{
		"keys": &graphql.Field{
			Type: graphql.NewList(graphql.String),
		},
	},
	Description: "",
})

var Keys_Input = graphql.NewInputObject(graphql.InputObjectConfig{
	Name: "Keys_Input",
	Fields: graphql.InputObjectConfigFieldMap{
		"keys": &graphql.InputObjectFieldConfig{
			Type: graphql.NewList(graphql.String),
		},
	},
})

/*
	Graphify unmarshaler
*/

/* UnmarshalJSON ...*/
func (o *Pagination) UnmarshalJSON(b []byte) error {
	if values, err := utils.MapFromBytes(b); err != nil {
		return err
	} else {
		o.UnmarshalMap(values)
	}
	return nil
}

/* UnmarshalMap populates struct fields from a map, handling decoding for special fields. */
func (o *Pagination) UnmarshalMap(values map[string]interface{}) {
	if val, ok := values["count"].(float64); ok {
		tmp := int64(val)
		o.Count = &tmp
	}
	if val, ok := values["offset"].(float64); ok {
		tmp := int64(val)
		o.Offset = &tmp
	}
}

/* UnmarshalJSON ...*/
func (o *Key) UnmarshalJSON(b []byte) error {
	if values, err := utils.MapFromBytes(b); err != nil {
		return err
	} else {
		o.UnmarshalMap(values)
	}
	return nil
}

/* UnmarshalMap populates struct fields from a map, handling decoding for special fields. */
func (o *Key) UnmarshalMap(values map[string]interface{}) {
	if val, ok := values["_key"].(string); ok {
		o.Key = val
	}
}

/* UnmarshalJSON ...*/
func (o *Keys) UnmarshalJSON(b []byte) error {
	if values, err := utils.MapFromBytes(b); err != nil {
		return err
	} else {
		o.UnmarshalMap(values)
	}
	return nil
}

/* UnmarshalMap populates struct fields from a map, handling decoding for special fields. */
func (o *Keys) UnmarshalMap(values map[string]interface{}) {
	if list, ok := values["keys"].([]interface{}); ok {
		utils.MakeSlice(&o.Keys, len(list))
		for index, item := range list {
			if val, ok := item.(string); ok {
				o.Keys[index] = val
			}
		}
	}
}
